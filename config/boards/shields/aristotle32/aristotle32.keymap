// ================ COPYRIGHT AND INCLUDES ================== {{{1
// Copyright (c) 2022 Bennett Helm
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// }}}
// ======================= SHORTHANDS ======================= {{{1
// These are shorthand references to keep things simple and tidy in the keymap
// below.

// Layer Names: Default, Numbers, Functions, GUI/Misc
#define DEF 0
#define NUM 1
#define NLK 2
#define FUN 3
#define FLK 4
#define GMC 5
#define GLK 6
#define MAC 7

// Combo timeout speeds (in ms). Note: must be enclosed in <>!
#define COMBO_SLOW <35>
#define COMBO_FAST <13>

// tapping-term-ms for home-row mods
#define HOME_FAST <185>
#define HOME_MEDIUM <210>
#define HOME_SLOW <240>
#define QUICK_TAP <200>

// Simplify Combos
/*                              32 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────┬────────────────────╮ ╭─────────────────────┬─────────────────────╮
  │  0   1   2   3   4 │  5   6   7   8   9 │ │ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
  │ 10  11  12  13  14 │ 15  16  17  18  19 │ │ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
  │     20  21  22  23 │ 24  25  26  27     │ │     LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3     │
  ╰───────────╮ 28  29 │ 30  31 ╭───────────╯ ╰───────────╮ LH1 LH0 │ RH0 RH1 ╭───────────╯
              ╰────────┴────────╯                         ╰─────────┴─────────╯             */

#define LT0  4  // left-top row
#define LT1  3
#define LT2  2
#define LT3  1
#define LT4  0

#define RT0  5  // right-top row
#define RT1  6
#define RT2  7
#define RT3  8
#define RT4  9

#define LM0 14  // left-middle row
#define LM1 13
#define LM2 12
#define LM3 11
#define LM4 10

#define RM0 15  // right-middle row
#define RM1 16
#define RM2 17
#define RM3 18
#define RM4 19

#define LB0 23  // left-bottom row
#define LB1 22
#define LB2 21
#define LB3 20

#define RB0 24  // right-bottom row
#define RB1 25
#define RB2 26
#define RB3 27

#define LH0 29  // left thumb keys
#define LH1 28

#define RH0 30  // right thumb keys
#define RH1 31

// For hold-trigger-key-positions, left and right sides
#define LEFTKEYS  <0 1 2 3 4 10 11 12 13 14 20 21 22 23 28 29>
#define RIGHTKEYS <5 6 7 8 9 15 16 17 18 19 24 25 26 27 30 31>


// Improve readability of keycodes
#define ___ &trans

// WINxxxx defines are for shortcuts with Rectangle.app to manipulate windows
#define WIN_PRV     &kp LG(LS(GRAVE))
#define WIN_NXT     &kp LG(GRAVE)
/* #define WIN_BIG &kp LC(LA(LG(RIGHT))) */
/* #define A_WIN_SML   &ms RIGHT_ALT LC(LA(LG(LEFT))) */
/* #define CD_WIN3LFT  &ms RIGHT_GUI LC(LA(LEFT)) */
/* #define CL_WIN3RGT  &ms RIGHT_CONTROL LC(LA(RIGHT)) */
/* #define WIN_LFT &kp LA(LG(LEFT)) */
/* #define WIN_CNT &kp LC(LG(LA(C))) */
/* #define WIN_RGT &kp LA(LG(RIGHT)) */
#define WIN_BIG     &kp LC(LA(EQUAL))
#define A_WIN_SML   &kp LC(LA(MINUS))
#define CD_WIN3LFT  &kp LC(LA(D))
#define CL_WIN3RGT  &kp LC(LA(G))
#define WIN_LFT     &kp LC(LA(LEFT))
#define WIN_CNT     &kp LC(LA(C))
#define WIN_RGT     &kp LC(LA(RIGHT))

// }}}

// ===================== OTHER SETTINGS ===================== {{{1
// Set options for layer-tap behavior
&lt {
    tapping-term-ms = <220>;
    // 200: getting some <spaces> *after* subsequently hit keys.
    // 150 was too quick: failed to get <spaces> when desired
    // 175: getting some missed taps, as well as some arrow keys instead of space-char
    // 250 was pretty wonky: getting too many taps when trying to hold
    quick-tap-ms = QUICK_TAP;
    flavor = "tap-preferred";
};
// }}}

/ {
// =================== BEHAVIORS/TAPDANCE =================== {{{1
    behaviors {
        hf: homewrow_mods_fast_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = HOME_FAST;
            quick-tap-ms = QUICK_TAP;
            flavor = "tap-preferred";
            /* flavor = "retro-tap"; */
            bindings = <&kp>, <&kp>;
        };
        hm: homewrow_mods_medium_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = HOME_MEDIUM;
            quick-tap-ms = QUICK_TAP;
            flavor = "tap-preferred";
            /* flavor = "retro-tap"; */
            bindings = <&kp>, <&kp>;
        };
        hs: homewrow_mods_slow_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = HOME_SLOW;
            quick-tap-ms = QUICK_TAP;
            flavor = "tap-preferred";
            /* flavor = "retro-tap"; */
            bindings = <&kp>, <&kp>;
        };
        /* lhf: homewrow_mods_fast_left { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = HOME_FAST; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     flavor = "tap-preferred"; */
        /*     /1* flavor = "retro-tap"; *1/ */
        /*     bindings = <&kp>, <&kp>; */
        /*     /1* hold-trigger-key-positions = RIGHTKEYS; *1/ */
        /* }; */
        /* rhf: homewrow_mods_fast_right { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = HOME_FAST; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     flavor = "tap-preferred"; */
        /*     /1* flavor = "retro-tap"; *1/ */
        /*     bindings = <&kp>, <&kp>; */
        /*     /1* hold-trigger-key-positions = LEFTKEYS; *1/ */
        /* }; */
        /* lhm: homewrow_mods_medium_left { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = HOME_MEDIUM; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     flavor = "tap-preferred"; */
        /*     /1* flavor = "retro-tap"; *1/ */
        /*     bindings = <&kp>, <&kp>; */
        /*     /1* hold-trigger-key-positions = RIGHTKEYS; *1/ */
        /* }; */
        /* rhm: homewrow_mods_medium_right { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = HOME_MEDIUM; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     flavor = "tap-preferred"; */
        /*     /1* flavor = "retro-tap"; *1/ */
        /*     bindings = <&kp>, <&kp>; */
        /*     /1* hold-trigger-key-positions = LEFTKEYS; *1/ */
        /* }; */
        /* lhs: homewrow_mods_slow_left { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = HOME_SLOW; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     flavor = "tap-preferred"; */
        /*     /1* flavor = "retro-tap"; *1/ */
        /*     bindings = <&kp>, <&kp>; */
        /*     /1* hold-trigger-key-positions = RIGHTKEYS; *1/ */
        /* }; */
        /* rhs: homewrow_mods_slow_right { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = HOME_SLOW; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     flavor = "tap-preferred"; */
        /*     /1* flavor = "retro-tap"; *1/ */
        /*     bindings = <&kp>, <&kp>; */
        /*     /1* hold-trigger-key-positions = LEFTKEYS; *1/ */
        /* }; */
        /* lht: left_positional_hold_tap {  // hold left hand key, only apply mod to keys on right */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     flavor = "hold-preferred"; */
        /*     tapping-term-ms = <400>; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     bindings = <&kp>, <&kp>; */
        /*     hold-trigger-key-positions = RIGHTKEYS; */
        /* }; */
        /* rht: right_positional_hold_tap {  // hold right hand key, only apply mod to keys on left */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     flavor = "hold-preferred"; */
        /*     tapping-term-ms = <400>; */
        /*     quick-tap-ms = QUICK_TAP; */
        /*     bindings = <&kp>, <&kp>; */
        /*     hold-trigger-key-positions = LEFTKEYS; */
        /* }; */
        tdName: tdName {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <250>;
            #binding-cells = <0>;
            bindings = <&firstname>, <&lastname>, <&fullname>;
        };
        /* tdTexTab: tdTexTab { */
        /*     compatible = "zmk,behavior-tap-dance"; */
        /*     tapping-term-ms = <250>; */
        /*     #binding-cells = <0>; */
        /*     bindings = <&tabedit>, <&texfile>; */
        /* }; */
        tdEmphEmail: tdEmphEmail {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <250>;
            #binding-cells = <0>;
            bindings = <&kp LA(J)>, <&email>;
        };
        tdCapDance: tdCapDance {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <300>;
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;
        };
    };  // }}}

// ========================= COMBOS ========================= {{{1
    combos {
        compatible = "zmk,combos";
        combo_plus {
            timeout-ms = COMBO_FAST;
            key-positions = <RT2 RT3>;
            bindings = <&kp PLUS>;
            layers = <DEF NUM NLK>;
        };
        combo_minus {
            timeout-ms = COMBO_FAST;
            key-positions = <RM1 RM2>;
            bindings = <&kp MINUS>;
            layers = <DEF NUM NLK>;
        };
        combo_underscore {
            timeout-ms = COMBO_FAST;
            key-positions = <RB1 RB2>;
            bindings = <&kp UNDERSCORE>;
            layers = <DEF NUM NLK>;
        };
        combo_question {
            timeout-ms = COMBO_FAST;
            key-positions = <LT3 LT2>;
            bindings = <&kp QUESTION>;
            layers = <DEF NUM NLK>;
        };
        combo_slash {
            timeout-ms = COMBO_FAST;
            key-positions = <LT2 LT1>;
            bindings = <&kp SLASH>;
            layers = <DEF NUM NLK>;
        };
        combo_lbrace {
            timeout-ms = COMBO_SLOW;
            key-positions = <LT3 LM3>;
            bindings = <&kp LEFT_BRACE>;
            layers = <DEF NUM NLK>;
        };
        combo_esc {
            timeout-ms = COMBO_SLOW;
            key-positions = <LT2 LM2>;
            bindings = <&kp ESC>;
            layers = <DEF NUM NLK FUN FLK>;
        };
        combo_backslash {
            timeout-ms = COMBO_SLOW;
            key-positions = <LM1 LM0>;
            bindings = <&kp BACKSLASH>;
            layers = <DEF NUM NLK>;
        };
        combo_pipe {
            timeout-ms = COMBO_SLOW;
            key-positions = <RM0 RM1>;
            bindings = <&kp PIPE>;
            layers = <DEF NUM NLK>;
        };
        combo_asterisk {
            timeout-ms = COMBO_SLOW;
            key-positions = <LT1 LM1>;
            bindings = <&kp ASTRK>;
            layers = <DEF NUM NLK>;
        };
        combo_doublequote {
            timeout-ms = COMBO_SLOW;
            key-positions = <RT1 RM1>;
            bindings = <&kp DQT>;
            layers = <DEF NUM NLK>;
        };
        combo_quoteword {
            timeout-ms = COMBO_SLOW;
            key-positions = <RT1 RM1>;
            bindings = <&kp LA(LEFT_BRACKET)>;
            layers = <MAC>;
        };
        combo_equal {
            timeout-ms = COMBO_FAST;
            key-positions = <RM2 RM3>;
            bindings = <&kp EQUAL>;
            layers = <DEF NUM NLK>;
        };
        // FIXME: The below is to wean me off of former location of <Return> -- it should be deleted!
        combo_return {
            timeout-ms = COMBO_SLOW;
            key-positions = <RT2 RM2>;
            bindings = <&none>;
            layers = <DEF NUM NLK FUN FLK GMC GLK>;
        };
        combo_rbrace {
            timeout-ms = COMBO_SLOW;
            key-positions = <RT3 RM3>;
            bindings = <&kp RIGHT_BRACE>;
            layers = <DEF NUM NLK>;
        };
        combo_lbracket {
            timeout-ms = COMBO_SLOW;
            key-positions = <LM3 LB3>;
            bindings = <&kp LEFT_BRACKET>;
            layers = <DEF NUM NLK>;
        };
        combo_tab {
            timeout-ms = COMBO_SLOW;
            key-positions = <LM2 LB2>;
            bindings = <&kp TAB>;
            layers = <DEF NUM NLK>;
        };
        combo_lparen {
            timeout-ms = COMBO_SLOW;
            key-positions = <LM1 LB1>;
            bindings = <&kp LPAR>;
            layers = <DEF NUM NLK>;
        };
        combo_rparen {
            timeout-ms = COMBO_SLOW;
            key-positions = <RM1 RB1>;
            bindings = <&kp RPAR>;
            layers = <DEF NUM NLK>;
        };
        combo_parenword {
            timeout-ms = COMBO_SLOW;
            key-positions = <RM1 RB1>;
            bindings = <&kp LA(RIGHT_BRACKET)>;
            layers = <MAC>;
        };
        combo_colon {
            timeout-ms = COMBO_SLOW;
            key-positions = <RM2 RB2>;
            bindings = <&kp COLON>;
            layers = <DEF NUM NLK>;
        };
        combo_rbracket {
            timeout-ms = COMBO_SLOW;
            key-positions = <RM3 RB3>;
            bindings = <&kp RIGHT_BRACKET>;
            layers = <DEF NUM NLK>;
        };
        /* combo_capslock { */
        /*     timeout-ms = COMBO_SLOW; */
        /*     key-positions = <10 19>; */
        /*     bindings = <&kp CAPS>; */
        /*     layers = <DEF>; */
        /* }; */
        combo_Z {
            timeout-ms = COMBO_FAST;
            key-positions = <RB2 RB3>;
            bindings = <&kp Z>;
            layers = <DEF>;
        };
        combo_exclamation {
            timeout-ms = COMBO_FAST;
            key-positions = <LB3 LB2>;
            bindings = <&kp EXCLAMATION>;
            layers = <DEF NUM NLK>;
        };
        combo_at {
            timeout-ms = COMBO_FAST;
            key-positions = <LB3 LB2 LB1>;
            bindings = <&kp AT>;
            layers = <DEF NUM NLK>;
        };
        combo_hash {
            timeout-ms = COMBO_FAST;
            key-positions = <LB2 LB1>;
            bindings = <&kp HASH>;
            layers = <DEF NUM NLK>;
        };
        combo_toDEFLayer {
            timeout-ms = COMBO_SLOW;
            key-positions = <RH0 RH1>;
            bindings = <&to DEF>;
            layers = <DEF NUM NLK FUN FLK GMC GLK>;
        };
        combo_numLock {
            timeout-ms = COMBO_SLOW;
            key-positions = <LT4 LM4>;
            bindings = <&tog NLK>;
            layers = <NUM NLK>;
        };
        combo_funLock {
            timeout-ms = COMBO_SLOW;
            key-positions = <LT4 LM4>;
            bindings = <&tog FLK>;
            layers = <FUN FLK>;
        };
        combo_GMCLock {
            timeout-ms = COMBO_SLOW;
            key-positions = <LT4 LM4>;
            bindings = <&tog GLK>;
            layers = <GMC GLK>;
        };
        combo_BTclr {
            timeout-ms = COMBO_FAST;
            key-positions = <LT3 LM3>;
            bindings = <&bt BT_CLR>;
            layers = <GMC GLK>;
        };
        combo_MCLK {
            timeout-ms = COMBO_SLOW;
            key-positions = <LH0 LH1>;
            bindings = <&mkp MCLK>;
            layers = <GMC GLK>;
        };
        combo_capDance {
            timeout-ms = <75>;
            key-positions = <LH0 LH1>;
            bindings = <&tdCapDance>;
            layers = <DEF>;
        };
        combo_tabedit {
            timeout-ms = COMBO_SLOW;
            key-positions = <LM2 LB2>;
            bindings = <&tabedit>;
            layers = <MAC>;
        };
    };  // }}}

// ========================= MACROS ========================= {{{1
// Docs say `wait-ms` and `tap-ms` should be at least 30 to avoid
// out-of-order keystrokes.
    macros {
        ZMK_MACRO(firstname,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp B>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp E &kp N &kp N &kp E &kp T &kp T>
                ;
        )
        ZMK_MACRO(lastname,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp H>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp E &kp L &kp M>
                ;
        )
        ZMK_MACRO(fullname,
            wait-ms = <15>;
            tap-ms = <5>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp B>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp E &kp N &kp N &kp E &kp T &kp T &kp SPACE>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp H>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp E &kp L &kp M>
                ;
        )
        ZMK_MACRO(email,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp B &kp E &kp N &kp N &kp E &kp T &kp T>
                , <&macro_wait_time 15>
                , <&macro_tap &kp DOT &kp H &kp E &kp L &kp M &kp AT &kp F &kp A &kp N &kp D &kp M>
                , <&macro_wait_time 15>
                , <&macro_tap &kp DOT &kp E &kp D &kp U>
                ;
        )
        ZMK_MACRO(tabedit,
            wait-ms = <50>;
            tap-ms = <5>;
            bindings
                = <&macro_tap &kp ESC &kp COLON>
                , <&macro_wait_time 10>
                , <&macro_tap &kp T &kp A &kp B &kp E &kp RETURN>
                ;
        )
        ZMK_MACRO(texfile,
            wait-ms = <50>;
            tap-ms = <5>;
            bindings
                = <&macro_tap &kp COLON>
                , <&macro_wait_time 10>
                , <&macro_tap &kp T &kp E &kp X &kp RETURN>
                ;
        )
        ZMK_MACRO(texclean,
            wait-ms = <50>;
            tap-ms = <5>;
            bindings
                = <&macro_tap &kp COLON>
                , <&macro_wait_time 10>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp T>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp E &kp X>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp C>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp L &kp E &kp A &kp N &kp RETURN>
                ;
        )
        ZMK_MACRO(enew,
            wait-ms = <50>;
            tap-ms = <5>;
            bindings
                = <&macro_tap &kp COLON>
                , <&macro_wait_time 10>
                , <&macro_tap &kp E &kp N &kp E &kp W &kp RETURN>
                ;
        )
};  // }}}

// ======================== KEYMAPS ========================= {{{1
    keymap {
        compatible = "zmk,keymap";
// ---------------------------------------------------- DVORAK -------------------------------------------------- {{{2
        default {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &kp SQT    &kp COMMA  &kp DOT    &kp P      &kp Y         &kp F      &kp G      &kp C      &kp R      &kp L
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &hf LSHFT A &hf LCTRL O &hm LALT E &hs LGUI U &kp I       &kp D      &hs RGUI H &hm RALT T &hm RCTRL N &hf RSHFT S
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &kp Q      &kp J      &kp K      &kp X         &kp B      &kp M      &kp W      &kp V
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 &lt MAC SEMI &lt NUM BSPC    &lt FUN SPACE &lt GMC ENTER
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
            >;
      };  // }}}
//  ---------------------------------------------------- NUMBERS ------------------------------------------------ {{{2
        numbers {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &kp TAB    &kp AMPS   &kp ASTRK  &kp LA(N6) &kp GRAVE     &none      &kp N7     &kp N8     &kp N9     &kp EQUAL
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &hs LSHFT TILDE &hs LCTRL DLLR &hs LALT PRCNT &hs LGUI CARET &kp COMMA   &kp DOT &hs RGUI N4 &hs RALT N5 &hs RCTRL N6 &hs RSHFT MINUS
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &kp EXCL   &kp AT     &kp HASH   &kp LA(K)     &kp N0     &kp N1     &kp N2     &kp N3
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 ___          ___             ___           ___
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
            >;
      };  // }}}
//  ------------------------------------------------- NUMBERS LOCK ---------------------------------------------- {{{2
// NOTE: This is exactly the same as NUMBERS
        numbers_lock {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &kp TAB    &kp AMPS   &kp ASTRK  &kp LA(N6) &kp GRAVE     &none      &kp N7     &kp N8     &kp N9     &kp EQUAL
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &hs LSHFT TILDE &hs LCTRL DLLR &hs LALT PRCNT &hs LGUI CARET &kp COMMA   &kp DOT &hs RGUI N4 &hs RALT N5 &hs RCTRL N6 &hs RSHFT MINUS
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &kp EXCL   &kp AT     &kp HASH   &kp LA(K)     &kp N0     &kp N1     &kp N2     &kp N3
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 ___          ___             ___           ___
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
            >;
      };  // }}}
// --------------------------------------------------- FUNCTIONS ------------------------------------------------ {{{2
        functions {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &kp TAB    &kp F7     &kp F8     &kp F9     &kp F12      &kp C_VOL_UP &kp HOME  &kp UP     &kp PG_UP &kp C_BRI_UP
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &kp LSHFT &hs LCTRL F4 &hs LALT F5 &hs LGUI F6 &kp F11   &kp C_VOL_DN &hs RGUI LEFT &hs RALT DOWN &hs RCTRL RIGHT &hs RSHFT C_BRI_DN
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &kp F1     &kp F2     &kp F3     &kp F10       &kp C_MUTE &kp END    &none      &kp PG_DN
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 ___          ___             ___           ___
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
            >;
      };  // }}}
// ------------------------------------------------ FUNCTIONS LOCK ---------------------------------------------- {{{2
// NOTE: This is exactly the same as FUNCTIONS
        functions_lock {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &kp TAB    &kp F7     &kp F8     &kp F9     &kp F12      &kp C_VOL_UP &kp HOME  &kp UP     &kp PG_UP &kp C_BRI_UP
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &kp LSHFT &hs LCTRL F4 &hs LALT F5 &hs LGUI F6 &kp F11   &kp C_VOL_DN &hs RGUI LEFT &hs RALT DOWN &hs RCTRL RIGHT &hs RSHFT C_BRI_DN
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &kp F1     &kp F2     &kp F3     &kp F10       &kp C_MUTE &kp END    &none      &kp PG_DN
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 ___          ___             ___           ___
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
            >;
      };  // }}}
// --------------------------------------------------- GUI/MISC ------------------------------------------------- {{{2
// |       |       |  M Up | Whl Up|  Accl2|          |       |       |       |       |       |
// |       |  M Lft|  M Dn |  M Rgt|  Accl1|          |       |       |       |       |       |
// |       |       |       | Whl Dn|  Accl0|          |       |       |       |       |       |
//                                 | LftBtn|          | RgtBtn|  ---- |
//
        gui_misc {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
   &bt BT_SEL 0 &bt BT_SEL 1 &none   &none      &none         &kp F3     WIN_PRV    WIN_BIG    WIN_NXT   &out OUT_TOG
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &kp LSHFT  &kp LCTRL  &kp LALT   &kp LGUI   &none         &kp LS(F3) CD_WIN3LFT A_WIN_SML  CL_WIN3RGT &kp RSHIFT
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &caps_word &none      &none      &none         &kp LG(F3) WIN_LFT    WIN_CNT    WIN_RGT
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 &mkp RCLK    &mkp LCLK       ___           ___
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
             >;
      };  // }}}
// ------------------------------------------------ GUI/MISC LOCK ----------------------------------------------- {{{2
// |       |       |  M Up | Whl Up|  Accl2|          |       |       |       |       |       |
// |       |  M Lft|  M Dn |  M Rgt|  Accl1|          |       |       |       |       |       |
// |       |       |       | Whl Dn|  Accl0|          |       |       |       |       |       |
//                                 | LftBtn|          | RgtBtn|  ---- |
//
// NOTE: This is exactly the same as GUI/MISC
        gui_misc_lock {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
   &bt BT_SEL 0 &bt BT_SEL 1 &none   &none      &none         &kp F3     WIN_PRV    WIN_BIG    WIN_NXT   &out OUT_TOG
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &kp LSHFT  &kp LCTRL  &kp LALT   &kp LGUI   &none         &kp LS(F3) CD_WIN3LFT A_WIN_SML  CL_WIN3RGT &kp RSHIFT
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &caps_word &none      &none      &none         &kp LG(F3) WIN_LFT    WIN_CNT    WIN_RGT
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 &mkp RCLK    &mkp LCLK       ___           ___
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
             >;
      }; // }}}
// ---------------------------------------------------- MACROS -------------------------------------------------- {{{2
// NOTE: I have the following mappings defined in vim:
//   ∆ -> \emph{}
//   “ -> \enquote{} -- defined in combos
//   ≥ -> \textbf{}
//   ß -> \textsc{}
//   ” -> ( ... ) [surround with parens] -- defined in combos
        macros {
            bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────╮  ╭──────────┬──────────┬──────────┬──────────┬──────────╮
    &none      &none      &none      &none      &none         &none      &none      &texclean  &none      &none
// ├──────────┼──────────┼──────────┼──────────┼──────────┤  ├──────────┼──────────┼──────────┼──────────┼──────────┤
    &none      &enew      &tdEmphEmail &none    &none         &none      &none      &texfile   &tdName    &kp LA(S)
// ╰──────────┴──────────┴──────────┴──────────┴──────────┤  ├──────────┴──────────┴──────────┴──────────┴──────────╯
               &none      &none      &none      &none         &kp LA(DOT) &none     &none      &none
//            ╰──────────┴──────┬───┴────────┬─┴──────────┤  ├──────────┴──┬───────┴────┬─────┴──────────╯
                                 &none        &none           &none         &none
//                              ╰────────────┴────────────╯  ╰─────────────┴────────────╯
            >;
      };  // }}}
  };  // keymap }}}
};

// vim: fdm=marker ft=c
